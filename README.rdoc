= AutoClick

Smulating mouse click, cursor movement and keystrokes

== Install

To install auto_click:

  gem install auto_click
  
== Usage

To use the methods provided by auto_click. You need to require it.

  require 'auto_click'

To move the mouse cursor to 50,50 ( the top left corner is 0,0) and perform a double left click:

  mouse_move(50,50)
  left_click
  left_click
  
To show the current cursor position:

  puts cursor_position
  
To scroll up (forward) 10 wheel steps:
  
  mouse_scroll(10)
  
To scroll down (backward) 5 wheel steps:
  
  mouse_scroll(-5)
  
To drag the icon on (50,50) to (200,300):

  left_drag(50,50,200,300)
 
To send keystroke 'a':

  key_stroke('a')

To send keystroke tab:

  key_stroke('tab')
  
Suppose the notepad window on the top left corner of the screen, to type "Auto Click" in notepad (assume that the capslock is off):

  mouse_move(100,100)
  leftclick            
  key_down('shift')        
  key_stroke('a')  
  key_up('shift')
  key_stroke('u')
  key_stroke('t')
  key_stroke('o')
  key_stroke('space')
  key_stroke('c')
  key_stroke('l')
  key_stroke('i')
  key_stroke('c')
  key_stroke('k')
  
Methods like get_windows("notepad") will be implemented in future release.
Notice that 'a' means the key 'a' instead of the letter 'a'. Therefore key_stroke('a') and key_stroke('A') is basically the same. If the capslock is off but you want to type the capitalized A, you need to:

  key_down('shift')        
  key_stroke('a')  
  key_up('shift')
  
A list of key stroke names will be included in the readme later. 'a' to 'z', 'num0' to 'num9', 'f1' to 'f12', 'shift' 'ctrl' 'alt' 'win' 'tab' 'del' 'ins' 'return' 'esc' 'pageup' 'pagedown' 'left' 'right' 'up' 'down' 'equal' 'hyphen'......etc are all acceptable key names.
  
If you know the virtual key code you can directly enter the key code, for example:

  key_stroke(0x41)
  
is the same as

  key_stroke('a')
  
  
== Method List

- left_click

- right_click

- cursor_position

- mouse_move(x,y)

- mouse_scroll(step)

- left_drag(sx,sy,ex,ey)

- right_drag(sx,sy,ex,ey)

- key_stroke(key_name)

- key_down(key_name)

- key_up(key_name)
 
 
== Change log (for full change log please refer to the CHANGELOG file in the repository

- 0.1.9 Add support for keybaord region specific keys using US-keyboard standard

- 0.1.8 Implement key_stroke, key_down and key_up

- 0.1.7 Primitive implementation of key_stroke. Need good api before putting it into method list

- 0.1.4 Implement left_drag and right_drag

 
== Tested with

- Ruby 1.9.1-p430, Windows 7

- Ruby 1.9.2-p0, Windows 7

- Ruby 1.9.2-p136, Windows 7
  
== License

MIT license

Copyright (C) 2010 by Tom Lam

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
